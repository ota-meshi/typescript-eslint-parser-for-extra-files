import A from "../vue-options01/source.vue"; // A: { name: string; components: { Foo: { name: string; props: { a: { type: NumberConstructor; default: number; }; }; }; }; data(): { a: number; numberValue: number; }; }
import B from "../vue-options02/source.vue"; // B: { name: string; props: { a: { type: NumberConstructor; default: number; }; }; }
import C from "../vue-script-setup01/source.vue"; // C: DefineComponent<ExtractPropTypes<{ foo: { type: StringConstructor; required: true; }; }>, { a: string; b: string; Foo: DefineComponent<ExtractPropTypes<{ a: { type: NumberConstructor; default: number; }; }>, ... 18 more ..., any>; }, ... 17 more ..., any>
import D from "../vue-script-setup02/source.vue"; // D: DefineComponent<ExtractPropTypes<{ a: { type: NumberConstructor; default: number; }; }>, { foo: number; }, {}, {}, {}, ComponentOptionsMixin, ... 13 more ..., any>
import { TypeFoo } from "../vue-script-setup02/source.vue"; // TypeFoo: any, TypeFoo: any
import E from "../vue-simple-types/source.vue"; // E: { name: string; data(): { a: number; }; }
export let a: TypeFoo; // a: string
export { A, B, C, D, E, TypeFoo }; // A: { name: string; components: { Foo: { name: string; props: { a: { type: NumberConstructor; default: number; }; }; }; }; data(): { a: number; numberValue: number; }; }, A: { name: string; components: { Foo: { name: string; props: { a: { type: NumberConstructor; default: number; }; }; }; }; data(): { a: number; numberValue: number; }; }, B: { name: string; props: { a: { type: NumberConstructor; default: number; }; }; }, B: { name: string; props: { a: { type: NumberConstructor; default: number; }; }; }, C: DefineComponent<ExtractPropTypes<{ foo: { type: StringConstructor; required: true; }; }>, { a: string; b: string; Foo: DefineComponent<ExtractPropTypes<{ a: { type: NumberConstructor; default: number; }; }>, ... 18 more ..., any>; }, ... 17 more ..., any>, C: DefineComponent<ExtractPropTypes<{ foo: { type: StringConstructor; required: true; }; }>, { a: string; b: string; Foo: DefineComponent<ExtractPropTypes<{ a: { type: NumberConstructor; default: number; }; }>, ... 18 more ..., any>; }, ... 17 more ..., any>, D: DefineComponent<ExtractPropTypes<{ a: { type: NumberConstructor; default: number; }; }>, { foo: number; }, {}, {}, {}, ComponentOptionsMixin, ... 13 more ..., any>, D: DefineComponent<ExtractPropTypes<{ a: { type: NumberConstructor; default: number; }; }>, { foo: number; }, {}, {}, {}, ComponentOptionsMixin, ... 13 more ..., any>, E: { name: string; data(): { a: number; }; }, E: { name: string; data(): { a: number; }; }, TypeFoo: any, TypeFoo: any
